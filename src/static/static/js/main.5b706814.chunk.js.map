{"version":3,"sources":["appdata.js","components/nav.js","values.js","components/options.js","components/question.js","components/footer.js","index.js"],"names":["optionsData","option","value","isSelected","appData","intro","instructions","buttonText","questions","title","text","keyword","options","NavComponent","id","className","href","class","React","Component","values","valuesArray","result","arrayOfValues","InteractiveButton","props","onInteractiveButtonClick","pageNumber","data","console","log","reduce","a","b","fetch","method","body","JSON","stringify","then","success","window","location","replace","catch","error","onClick","setState","state","style","color","backgroundColor","boxShadow","this","isSelectedInParent","bind","Options","setOptionState","index","texts","optionState","Array","length","fill","allOptionStates","getOptionState","optionsElement","map","key","indexOf","toString","Question","setAnswered","isAnswered","questionData","myQuestionData","header","element","textAlign","numberedToTen","PageNumberComponent","disabled","allPages","selected","deselected","animateIn","animation","animateOut","Interactive","comparePages","page","forEach","advancePage","pageAnimation","stateOfAllPages","destinationPage","animateWhere","isOptionClicked","setTimeout","currentQuestion","pages","i","push","isCurrent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b706814.chunk.js","sourcesContent":["const optionsData = [\r\n    { option: \"All of the time\", value: 4, isSelected: false },\r\n    { option: \"Most of the time\", value: 3, isSelected: false },\r\n    { option: \"Some of the time\", value: 2, isSelected: false },\r\n    { option: \"A little of the time\", value: 1, isSelected: false },\r\n    { option: \"None of the time\", value: 0, isSelected: false }\r\n];\r\n\r\nconst questions = [\r\n    {\r\n        title: \"Hello!\",\r\n        text: [\r\n            \"Your consultant will soon be with you. As an head start, kindly answer the following questions to know how we may help you better.\",\r\n            \"The following questions ask about how you have been feeling during the past 30 days. For each question, please click the option that best describes how often you had this feeling. The following questions ask about how you have been feeling during the past 30 days. For each question, please click the option that best describes how often you had this feeling.\"],\r\n        keyword: null,\r\n        options: [{ option: \"Begin Assessment\", value: null, isSelected: true }]\r\n    },\r\n    {\r\n        title: \"Question\",\r\n        text: \"During the past 30 days, about how often did you feel nervous?\",\r\n        keyword: \"nervous\",\r\n        options: optionsData\r\n    },\r\n    {\r\n        title: \"Question\",\r\n        text: \"During the past 30 days, about how often did you feel hopeless?\",\r\n        keyword: \"hopeless\",\r\n        options: optionsData\r\n    },\r\n    {\r\n        title: \"Question\",\r\n        text: \"During the past 30 days, about how often did you feel restless or fidgety?\",\r\n        keyword: \"restless or fidgety\",\r\n        options: optionsData\r\n    },\r\n    {\r\n        title: \"Question\",\r\n        text: \"During the past 30 days, about how often did you feel so depressed that nothing could cheer you up?\",\r\n        keyword: \"so depressed that nothing could cheer you up\",\r\n        options: optionsData\r\n    },\r\n    {\r\n        title: \"Question\",\r\n        text: \"During the past 30 days, about how often did you feel that everything was an effort?\",\r\n        keyword: \"that everything was an effort\",\r\n        options: optionsData\r\n    },\r\n    {\r\n        title: \"Question\",\r\n        text: \"During the past 30 days, about how often did you feel worthless?\",\r\n        keyword: \"worthless\",\r\n        options: optionsData\r\n    },\r\n    {\r\n        title: \"All Done\",\r\n        text: [\"Thank you for completing the initial screening.\", \"We'll now link you up with a consultant. Click the finish button to proceed.\"],\r\n        keyword: null,\r\n        options: [{ option: \"Finish\", value: null, isSelected: true }]\r\n    }\r\n]\r\n\r\nconst appData = {\r\n    intro: {\r\n        instructions: [\r\n            \"Your consultant will soon be with you. As an head start, kindly answer the following questions to know how we may help you better.\",\r\n            \"The following questions ask about how you have been feeling during the past 30 days. For each question, please click the option that best describes how often you had this feeling.\"\r\n        ],\r\n        buttonText: \"Begin Assessment\"\r\n    },\r\n    questions: questions\r\n}\r\n\r\nexport default appData;","import React from 'react';\r\n\r\nexport default class NavComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav id=\"buildforsdgs-nav\">\r\n                <div className=\"buildforsdgs-nav-brand\">\r\n                <a href=\"/\" class=\"buildforsdgs-brand-link text-dark font-weight-bold\">Forethought</a>\r\n                </div>\r\n                <div className=\"buildforsdgs-nav-links\">\r\n                    <a href=\"/about\" className=\"nav-link\">About</a>\r\n                    <a href=\"/emergency\"><span class=\"material-icons\">call</span> Emergency</a>\r\n                    <a href=\"#\" className=\"nav-link\">End Screening</a>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}","const values = {\r\n    valuesArray: [],\r\n    result: null\r\n};\r\n\r\nexport default values;","import React from 'react';\r\nimport values from '../values';\r\nimport appData from '../appdata';\r\nconst arrayOfValues = values.valuesArray;\r\n\r\nclass InteractiveButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: null,\r\n            isSelected: false\r\n        }\r\n\r\n        this.style = {\r\n            color: 'white',\r\n            backgroundColor: 'var(--buildforsdgs-primary-color)',\r\n            boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.1)'\r\n        }\r\n    }\r\n\r\n    onInteractiveButtonClick = () => {\r\n        if (this.props.pageNumber > 0 && this.props.pageNumber < 7) arrayOfValues[this.props.pageNumber - 1] = this.props.data.value;\r\n        if (this.props.pageNumber > 6) {\r\n            console.log(\"values: \", ...arrayOfValues);\r\n            values.result = arrayOfValues.reduce((a, b) => a + b);\r\n            console.log(\"result: \", values.result);\r\n            //TODO: include ability to send results to the backend\r\n            fetch('/api/test', {\r\n                method: 'POST',\r\n                body: JSON.stringify(values.result)\r\n            }).then((success) => {\r\n              console.log(success);\r\n              window.location.replace('/users/connect');\r\n            }).catch(error => {\r\n              console.log(error);\r\n              window.location.replace('/');\r\n            });\r\n        }\r\n        this.props.onClick();\r\n        this.setState({\r\n            value: this.props.data.value,\r\n            isSelected: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button className=\"buildforsdgs-question-option\" style={ this.props.isSelectedInParent ? this.style : { } } onClick={this.onInteractiveButtonClick.bind(this)}>{this.props.data.option} </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default class Options extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.optionState = Array(this.props.data.length).fill(false);\r\n        this.allOptionStates = Array(appData.questions.length).fill(this.optionState);\r\n\r\n        this.state = {\r\n            allOptionStates: this.allOptionStates\r\n        }\r\n\r\n        this.getOptionState.bind(this);\r\n        this.setOptionState.bind(this);\r\n    }\r\n\r\n    setOptionState = (index, texts, pageNumber) => {\r\n        this.optionState = Array(texts.length).fill(false);\r\n        // this.allOptionStates = Array(appData.questions.length).fill(this.optionState);\r\n        // texts = texts.map((each) => each.isSelected = false);\r\n        this.optionState[index] = true;\r\n        this.allOptionStates[pageNumber] = this.optionState;\r\n        \r\n        this.setState({\r\n            allOptionStates: this.allOptionStates\r\n        });\r\n\r\n        this.props.onClick();\r\n    }\r\n\r\n    getOptionState = (index) => {\r\n        let optionState = this.state.allOptionStates[this.props.pageNumber];\r\n        console.log(\"pageNumber\", this.props.pageNumber,\"optionState: \", optionState);\r\n        return optionState[index];\r\n    }\r\n\r\n    render() {\r\n        const texts = this.props.data;\r\n        const optionsElement = texts.map((option) =>\r\n            <InteractiveButton key={texts.indexOf(option).toString()} data={option} onClick={() => this.setOptionState(texts.indexOf(option), texts, this.props.pageNumber)} pageNumber={this.props.pageNumber} isSelectedInParent={ this.getOptionState(texts.indexOf(option)) } />\r\n        );\r\n        // console.log(this.state.allOptionStates[this.props.pageNumber]);\r\n        return (\r\n            <div className=\"question-options-div\">{optionsElement}</div>\r\n        );\r\n    }\r\n}","import Options from './options';\r\nimport React from 'react';\r\n\r\nexport default class Question extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: null,\r\n            isAnswered: false\r\n        }\r\n    }\r\n\r\n    setAnswered = () => {\r\n        this.setState({isAnswered: true});\r\n        this.props.onClick();\r\n    }\r\n\r\n    render() {\r\n        const { keyword } = this.props.questionData;\r\n        const myQuestionData = this.props.questionData;\r\n\r\n        let text = \"\";\r\n        let header = \"\";\r\n\r\n        if(this.props.pageNumber === 0 || this.props.pageNumber > 6){\r\n            header = <h2 className=\"buildforsdgs-question-header\">{ myQuestionData.title}</h2>;\r\n            const textData = myQuestionData.text;\r\n            text = textData.map((element) => <p className=\"buildforsdgs-question-text\" key={element.toString()} style={{textAlign: 'start'}}>{element}</p>);\r\n        }else{\r\n            header = <h2 className=\"buildforsdgs-question-header\">Question { this.props.pageNumber }</h2>;\r\n            text = <p className=\"buildforsdgs-question-text\">During the past 30 days, about how often did you feel <span className=\"primary-color-text\">{ keyword }</span>?</p>;\r\n        }\r\n        return (\r\n            <div id=\"buildforsdgs-screening-content\">\r\n                <div id=\"header-div\">\r\n                    {header}\r\n                </div>\r\n                <div id=\"question-text-div\">\r\n                    {text}\r\n                </div>\r\n                <Options data={ this.props.questionData.options } onClick={() => this.setAnswered() } pageNumber={ this.props.pageNumber }/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nconst numberedToTen = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ];\r\n\r\nexport default class PageNumberComponent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            style: {}\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <button className=\"buildforsdgs-nav-button\" style={ this.props.style } onClick={ () => this.props.onClick() } disabled={ this.props.disabled }>{ this.props.value }</button>\r\n        );\r\n    }\r\n}\r\n\r\nclass BottomNavigation extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentPage: null,\r\n        }\r\n        this.comparePages = this.comparePages.bind(this);\r\n    }\r\n\r\n    comparePages = (page) => {\r\n        numberedToTen.forEach((element) => {\r\n            if(page === element) {\r\n                console.log(\"indexof page: \", numberedToTen.indexOf(page));\r\n            }\r\n            else console.log(\"element not found!\");\r\n        });\r\n        // this.props.onClick();\r\n    }\r\n\r\n    render() {\r\n        const pages = numberedToTen.map((page) => <PageNumberComponent value={ page } isCurrent={ page === this.props.currentPage } onClick={ () => this.comparePages(page) } />);\r\n        return (\r\n            <section id=\"bottom-navigation\" className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"offset-lg-1 col-lg-10 bottom-navigation-group\">\r\n                        { pages }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport appData from './appdata';\r\n// import values from './values';\r\n\r\nimport NavComponent from './components/nav';\r\nimport Question from './components/question';\r\nimport BottomNavigation from './components/footer';\r\nimport PageNumberComponent from './components/footer';\r\n\r\nconst allPages = [];\r\n\r\nconst selected = {\r\n    color: 'white',\r\n    backgroundColor: 'var(--buildforsdgs-primary-color)',\r\n    boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.1)'\r\n};\r\n\r\nconst deselected = {\r\n    color: 'var(--buildforsdgs-primary-color)',\r\n    backgroundColor: 'transparent'\r\n}\r\n\r\nlet animateIn = {\r\n    animation: '400ms ease-out animatePage'\r\n}\r\n\r\nlet pageAnimation = {};\r\n\r\nconst animateOut = {\r\n    animation: '400ms ease-out reverse animatePage'\r\n}\r\n\r\nclass Interactive extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pageNumber: 0,\r\n            style: deselected,\r\n            pageAnimation: animateIn,\r\n            stateOfAllPages: []\r\n        };\r\n        this.stateOfAllPages = Array(appData.questions.length).fill(false);\r\n        this.stateOfAllPages[0] = true;\r\n        this.advancePage = this.advancePage.bind(this);\r\n        this.comparePages = this.comparePages.bind(this);\r\n    }\r\n\r\n    advancePage(destinationPage, animateWhere, isOptionClicked) {\r\n        if(isOptionClicked) this.stateOfAllPages[destinationPage] = true;\r\n\r\n        this.setState({\r\n            pageAnimation: animateWhere || animateIn,\r\n            pageNumber: destinationPage,\r\n            stateOfAllPages: this.stateOfAllPages\r\n        });\r\n        \r\n        setTimeout(() => { this.setState({ pageAnimation: { } }) }, 800);\r\n    }\r\n\r\n    comparePages = (page) => {\r\n        allPages.forEach((element) => {\r\n            if (page === element) {\r\n                // console.log(\"indexof page: \", allPages.indexOf(page));\r\n                if(this.state.pageNumber > page) this.advancePage(page, animateOut);\r\n                else this.advancePage(page, animateIn);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const currentQuestion = appData.questions[this.state.pageNumber];\r\n        const pages = [];\r\n        \r\n        for(let i = 1; i < appData.questions.length; i++){\r\n            pages.push(<PageNumberComponent key={ i.toString() } value={i} isCurrent={ i === this.state.pageNumber} onClick={() => this.comparePages(i)} style={this.state.pageNumber === i ? selected : deselected } disabled={ !this.state.stateOfAllPages[i] }  />);\r\n            allPages.push(i);\r\n        }\r\n\r\n        return (\r\n            <div id=\"buildforsdgs-interactive-container\">\r\n                <NavComponent />\r\n                <main>\r\n                    <div className=\"container-fluid\" style={ this.state.pageAnimation }>\r\n                        <div className=\"row\">\r\n                            <div className=\"offset-xl-2 col-xl-8 offset-lg-1 col-lg-10\">\r\n                                <Question questionData={ currentQuestion } pageNumber={this.state.pageNumber} onClick={() => { this.state.pageNumber < appData.questions.length - 1 && this.advancePage(this.state.pageNumber + 1, animateIn, true) }} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n                <section id=\"bottom-navigation\" className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"offset-lg-1 col-lg-10 bottom-navigation-group\">\r\n                            {pages}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        \r\n    }\r\n}\r\n\r\nReactDOM.render(<Interactive />, document.getElementById(\"root\"));"],"sourceRoot":""}